library(tidyr)
df=tibble(
year=c(2010,2010,2010,2010,2012,2012,2012),
qtr=c(1,2,3,4,1,2,3),
revenue=c(10,20,30,40,NA,60,70)
)
df
library(dpl)
library(dplyr)
df%>%complete(year=full_seq(year,1)),qrt)
df%>%complete(year=full_seq(year,1), qtr)
#gather 함수 실습
gather=tibble(
country=c(Afghanistan,Brazil,China),
"1999"=c(745,37745,212258),
"2000"=c(2666,80268,213766)
)
gather=tibble(
country=c(Afghanistan,Brazil,China),
"1999"=c(745,37745,212258),
"2000"=c(2666,80268,213766)
)
#gather 함수 실습
gather=tibble(
country=c("Afghanistan","Brazil","China"),
"1999"=c(745,37745,212258),
"2000"=c(2666,80268,213766)
)
gather
gather%>%gather("1999","2000",key="year",value="cases")
country=c("Afghanistan","Afghanistan","Brazil","Brazil","China","China"),
year=c(1999,2000,1999,2000,1999,2000),
cases=c(2666,80268,21376,81446,25646,85656),
population=c(1949856,45612328,1561545,541551,456565,884666)
)
separate=tibble(
country=c("Afghanistan","Afghanistan","Brazil","Brazil","China","China"),
year=c(1999,2000,1999,2000,1999,2000),
cases=c(2666,80268,21376,81446,25646,85656),
population=c(1949856,45612328,1561545,541551,456565,884666)
)
separate
separate%>%separate(rate, into(c("cases","population")))
separate%>%separate(rate, into=(c("cases","population")))
separate=tibble(
country=c("Afghanistan","Afghanistan","Brazil","Brazil","China","China"),
year=c(1999,2000,1999,2000,1999,2000),
rate=c(745/1948169,2566/156156651,846/651651165,8789/65412321,8516/44446455,86/8898)
)
separate%>%separate(rate, into=(c("cases","population")))
gather%>%gather("1999","2000",key="year",value="cases")
gather=tibble(
country=c("Afghanistan","Brazil","China"),
"1999"=c(745,37745,212258),
"2000"=c(2666,80268,213766)
)
gather
spread=tibble(
country=c("Afghanistan","Afghanistan","Afghanistan","Afghanistan","Brazil","Brazil","Brazil","Brazil","China","China","China","China"),
year=c(1999,1999,2000,2000,1999,1999,2000,2000,1999,1999,2000,2000),
key=c("cases","pop","cases","pop","cases","pop","cases","pop","cases","pop","cases","pop")
rate=c(654,8794561,152,4864513,451,654651,465,48956165,645,656526,123,54689)
)
spread=tibble(
country=c("Afghanistan","Afghanistan","Afghanistan","Afghanistan","Brazil","Brazil","Brazil","Brazil","China","China","China","China"),
year=c(1999,1999,2000,2000,1999,1999,2000,2000,1999,1999,2000,2000),
key=c("cases","pop","cases","pop","cases","pop","cases","pop","cases","pop","cases","pop"),
rate=c(654,8794561,152,4864513,451,654651,465,48956165,645,656526,123,54689)
)
spread
spread=tibble(
country=c("Afghanistan","Afghanistan","Afghanistan","Afghanistan","Brazil","Brazil","Brazil","Brazil","China","China","China","China"),
year=c(1999,1999,2000,2000,1999,1999,2000,2000,1999,1999,2000,2000),
key=c("cases","pop","cases","pop","cases","pop","cases","pop","cases","pop","cases","pop"),
value=c(654,8794561,152,4864513,451,654651,465,48956165,645,656526,123,54689)
)
spread%>%spread(key="type",value="count")
spread%>%spread(key="type",value="count")
#spread 함수 실습
spread=tibble(
country=c("Afghanistan","Afghanistan","Afghanistan","Afghanistan","Brazil","Brazil","Brazil","Brazil","China","China","China","China"),
year=c(1999,1999,2000,2000,1999,1999,2000,2000,1999,1999,2000,2000),
type=c("cases","pop","cases","pop","cases","pop","cases","pop","cases","pop","cases","pop"),
count=c(654,8794561,152,4864513,451,654651,465,48956165,645,656526,123,54689)
)
spread%>%spread(key="type",value="count")
spread%>%spread(key="year",value="count")
#spread 함수 실습
spread=tibble(
country=c("Afghanistan","Afghanistan","Afghanistan","Afghanistan","Brazil","Brazil","Brazil","Brazil","China","China","China","China"),
year=c(1999,1999,2000,2000,1999,1999,2000,2000,1999,1999,2000,2000),
type=c("cases","pop","cases","pop","cases","pop","cases","pop","cases","pop","cases","pop"),
count=c(654,8794561,152,4864513,451,654651,465,48956165,645,656526,123,54689)
)
library(tidyr)
library(dplyr)
#spread 함수 실습
spread=tibble(
country=c("Afghanistan","Afghanistan","Afghanistan","Afghanistan","Brazil","Brazil","Brazil","Brazil","China","China","China","China"),
year=c(1999,1999,2000,2000,1999,1999,2000,2000,1999,1999,2000,2000),
type=c("cases","pop","cases","pop","cases","pop","cases","pop","cases","pop","cases","pop"),
count=c(654,8794561,152,4864513,451,654651,465,48956165,645,656526,123,54689)
)
spread%>%spread(key="year",value="count")
spread%>%spread(key="type",value="count")
library(tidyr)
library(dplyr)
spread=tibble(
country=c("Afghanistan","Afghanistan","Afghanistan","Afghanistan","Brazil","Brazil","Brazil","Brazil","China","China","China","China"),
year=c(1999,1999,2000,2000,1999,1999,2000,2000,1999,1999,2000,2000),
type=c("cases","pop","cases","pop","cases","pop","cases","pop","cases","pop","cases","pop"),
count=c(654,8794561,152,4864513,451,654651,465,48956165,645,656526,123,54689)
)
spread%>%spread(key="type",value="count")
spread%>%spread(key="year",value="count")
spread%>%spread(key="type",value="count")
library(dplyr)
library(tidyr)
getwd()
setwd("C:/Users/Administrator/Documents/Today_I_Learned/R통계분석")
data=read.csv("test_data.csv",header=T)
View(data)
str(data)
names(data)=c("Time","Division","Particulates","Ultra_Particulates")
new_data=na.omit(data)
div_partuculates=new_data%>%group_by(Division)%>%summarise(mean_Particulates=mean(Particulates),mid_Particulates=median(Particulates),max_Particulates=max(Particulates))
div_Ultra=new_data%>%group_by(Division)%>%summarise(mean_Ultra=mean(Ultra_Particulates),mid_Ultra=median(Ultra_Particulates),max_Ultra=max(Ultra_Particulates))
div_partuculates
div_Ultra
div_partuculates%>%arrange(desc(mean_Particulates))%>%head(1)
#해석 : 우선 데이터에 NA값이 존재해서 NA값으 존재하는 행은 모두 계산에서 배제하기 위해 na.omit() 함수를 활용했다. 그 뒤 미세먼지와 초미세먼지에 대한 tibble을 따로 만들었다           먼저 group_by 함수를 이용해 각 구별로 구분짓고 summarise함수를 통해 각 구마다 최대값 중앙값 평균값을 구했다.
#       그 뒤 미세먼지 tibble에서 미세먼지 평균에 대한 row를 arrange함수를 통해 내림차순 정렬 한뒤 가장 앞의 값을 출력했다.
#정답 : 서초구가 미세먼지의 평균값이 가장 높다.
new_data%>%select(Time,Division,Particulates)%>%arrange(desc(Particulates))%>%head(1)
#해석 : 결측치를 제거한 new_data에서 초미세먼지에 대한 정보를 제외하고 일시와 장소 미세먼지에대한 정보만 select후 미세먼지가 높은순으로 정렬 한뒤 첫번째 값만 출력했다.
#정답 : 2021-05-08 1:00 중구
a=new_data%>%select(Time,Division,Ultra_Particulates)%>%arrange(Ultra_Particulates)
View(a)
#해석 : 결측치를 제거한 new_data에서 미세먼지에 대한 정보를 제외하고 일시와 장소 초미세먼지에 대한 정보만 select한 후 초미세먼지를 기준으로 오름차순 정렬을 했다.
#결과 : 초미세먼지 측정값의 최저치가 "1"인 일시와 지역이 너무 많다. View를 활용해 데이터를 확인한 결과 5698번의 일시가 최저치로 측정되었다.
#해석 : 결측치를 제거한 new_data에서 초미세먼지에 대한 정보를 제외하고 일시와 장소 미세먼지에대한 정보만 select후 미세먼지가 높은순으로 정렬 한뒤 첫번째 값만 출력했다.
#정답 : 2021-05-08 1:00 중구
data%>%select(Time,Division,Ultra_Particulates)%>%arrange(Ultra_Particulates)
#해석 : 결측치를 제거한 new_data에서 초미세먼지에 대한 정보를 제외하고 일시와 장소 미세먼지에대한 정보만 select후 미세먼지가 높은순으로 정렬 한뒤 첫번째 값만 출력했다.
#정답 : 2021-05-08 1:00 중구
a=data%>%select(Time,Division,Ultra_Particulates)%>%arrange(Ultra_Particulates)
View(a)
a%>%select(Time,Division,Particulates)%>%arrange(desc(Particulates))%>%head(1)
data%>%select(Time,Division,Particulates)%>%arrange(desc(Particulates))%>%head(1)
df=read.xlsx(file.choose(),sheet=1,startRow=4)
library(ggmap)
library(ggplot2)
library(openxlsx)
register_google(key="AIzaSyDoF_ZIWB5VhuifKAv99Xek5bDfugkLlOc")
df=read.xlsx(file.choose(),sheet=1,startRow=4)
df(head)
head(df)
tail(df)
df[,6]=gsub("N","",df[,6])
df[,7]=gsub("E","",df[,7])
df2=data.frane(lon=df[,7],lat=df[,6],mag=df[,3])
df2=data.frame(lon=df[,7],lat=df[,6],mag=df[,3])
str(df2)
df2[,1]=as.numeric(as.character(df2[,1]))
df2[,2]=as.numeric(as.character(df2[,2]))
df2[,3]=as.numeric(as.character(df2[,3]))
str(df2)
cen=c((max(df$lon)+min(df2$lon))/2),(max(df$lat)+min(df2$lat))/2))
cen=c((max(df$lon)+min(df2$lon))/2),(max(df$lat)+min(df2$lat))/2)))
cen=c((max(df$lon)+min(df2$lon))/2,(max(df$lat)+min(df2$lat))/2))
cen=c((max(df$lon)+min(df2$lon))/2,(max(df$lat)+min(df2$lat))/2)
cen=c((max(df2$lon)+min(df2$lon))/2,(max(df2$lat)+min(df2$lat))/2)
map=get_googlemap(center=cen,zoom=6)
gmap=ggmap(map)
gmap
gmap+geom_point(data=df2,aes(x=lon, y=lat),color="red",size=df2$msg,alpha=0.5)
gmap+geom_point(data=df2,aes(x=lon, y=lat),color="red",size=df2$mag,alpha=0.5)
library(ggplot2)
library(dplyr)
df=mpg %>% group_by(cyl)
df
mpg
factor(mpg$cyl)
df=mpg %>% group_by(cyl) %>% summarise(hwy=hwy)
df=mpg %>% group_by(cyl) %>% summarise(hwy1=hwy)
boxplot(iris$Sepal.Length,horizontal = T,col="green1")
sepal.Stat2=boxplot(Sepal.Width~Species,data=iris,col=rainbow(3),xlab="Iris Species",notch=T)
iris
df=boxplot(hwy~cyl,data=mpg,col=rainbow(3),xlab="Iris Species",notch=T)
df=boxplot(hwy~cyl,data=mpg,col=rainbow(3),xlab="Iris Species")
df=boxplot(hwy~cyl,data=mpg,col=rainbow(4),xlab="cyl")
str(Df)
str(df)
df$stats
df
df2=qplot(hwy,cty,data=mpg)
df2=qplot(hwy,cty,data=mpg)
df2
df2=ggplot(data=mpg,aes(x=hwy,y=cty))+geom_point()
df2
df=boxplot(hwy~cyl,data=mpg,col=rainbow(4),xlab="cyl")
df2=ggplot(data=mpg,aes(x=hwy,y=cty))+geom_point()
df2
mpg
df2=ggplot(data=mpg,aes(x=cty,y=hwy))+geom_point()
df2
mpg_temp=mpg %>% filter(class=="compact") %>% group_by(manufacturer) %>% summarise(mean_hwy=mean(hwy))
mpg_temp
barplot(mpg_temp)
df3=ggplot(data=mpg_temp,aes(x=manufacturer,y=mean_hwy))
df3
df3=ggplot(data=mpg_temp,aes(x=manufacturer,y=mean_hwy))+geom_col()
df3
df3=ggplot(data=mpg_temp,aes(x=manufacturer,y=mean_hwy))+geom_bar()
df3
df3=ggplot(data=mpg_temp,aes(x=manufacturer,y=mean_hwy))+geom_bar()
df3
df3=ggplot(data=mpg_temp,aes(x=manufacturer,y=mean_hwy))+geom_col()
df3
df3=ggplot(data=mpg_temp,aes(x=manufacturer,y=mean_hwy))+geom_col(main="hi")
df3=ggplot(data=mpg_temp,aes(x=manufacturer,y=mean_hwy))+geom_col(col=rainbow(5))
df3
df3=ggplot(data=mpg_temp,aes(x=manufacturer,y=mean_hwy,fill=manufacturer))+geom_col(col=rainbow(5))
df3
df3=ggplot(data=mpg_temp,aes(x=manufacturer,y=mean_hwy,fill=manufacturer))+geom_col()
df3
df3=ggplot(data=mpg_temp,aes(x=reorder(manufacturer,mean_hwy),y=mean_hwy,fill=manufacturer))+geom_col()
df3
df3=ggplot(data=mpg_temp,aes(x=reorder(manufacturer,-mean_hwy),y=mean_hwy,fill=manufacturer))+geom_col()
df3
df=boxplot(hwy~cyl,data=mpg,col=rainbow(4),xlab="cyl")
df=ggplot(data=mpg,aes(x=cyl,y=hwy))+geom_boxplot()
df
df=ggplot(data=mpg,aes(x=as.factor(mpg$cyl),y=hwy))+geom_boxplot()
df
df=ggplot(data=mpg,aes(x=as.factor(mpg$cyl),y=hwy),fill=as.factor(mpg$cyl))+geom_boxplot()
df
df=ggplot(data=mpg,aes(x=as.factor(mpg$cyl),y=hwy))+geom_boxplot()
df
df=ggplot(data=mpg,aes(x=as.factor(mpg$cyl),y=hwy))+geom_boxplot()+xlab("cyl")
df
df=boxplot(hwy~cyl,data=mpg,col=rainbow(4),xlab="cyl")
df$stats
df
df=ggplot(data=mpg,aes(x=as.factor(mpg$cyl),y=hwy))+geom_boxplot()+xlab("cyl")
df
cyl_temp=as.factor(mpg$cyl)
df=ggplot(data=mpg,aes(x=cyl_temp,y=hwy),fill=)+geom_boxplot()+xlab("cyl")
df
df=ggplot(data=mpg,aes(x=cyl_temp,y=hwy),fill=cyl_temp)+geom_boxplot()+xlab("cyl")
df
df=ggplot(data=mpg,aes(x=cyl_temp,y=hwy,fill=cyl_temp)+geom_boxplot()+xlab("cyl")
df
df=ggplot(data=mpg,aes(x=cyl_temp,y=hwy,fill=cyl_temp))+geom_boxplot()+xlab("cyl")
df
df=ggplot(data=mpg,aes(x=as.factor(mpg$cyl),y=hwy,fill=as.factor(mpg$cyl)))+geom_boxplot()+xlab("cyl")
df
df=ggplot(data=mpg,aes(x=as.factor(mpg$cyl),y=hwy,fill=cyl)+geom_boxplot()+xlab("cyl")
df
df
df=ggplot(data=mpg,aes(x=as.factor(mpg$cyl),y=hwy,fill=as.factor(mpg$cyl))+geom_boxplot()+xlab("cyl")
df
df=ggplot(data=mpg,aes(x=as.factor(mpg$cyl),y=hwy,fill=as.factor(mpg$cyl)))+geom_boxplot()+xlab("cyl")
df
df=ggplot(data=mpg,aes(x=as.factor(mpg$cyl),y=hwy,fill=as.factor(cyl)))+geom_boxplot()+xlab("cyl")
df
df=ggplot(data=mpg,aes(x=as.factor(cyl),y=hwy,fill=as.factor(cyl)))+geom_boxplot()+xlab("cyl")
df
df=ggplot(data=mpg,aes(x=as.factor(cyl),y=hwy,fill=as.factor(cyl)))+geom_boxplot()
df
df=ggplot(data=mpg,aes(x=as.factor(cyl),y=hwy,fill=as.factor(cyl)))+geom_boxplot()+xlab(cyl)
df=ggplot(data=mpg,aes(x=as.factor(cyl),y=hwy,fill=as.factor(cyl)))+geom_boxplot()+xlab("cyl")
df
df=boxplot(hwy~cyl,data=mpg,col=rainbow(4),xlab="cyl")
df$stats
df=ggplot(data=mpg,aes(x=as.factor(cyl),y=hwy,fill=as.factor(cyl)))+geom_boxplot()+xlab("cyl")
df
df=ggplot(data=mpg,aes(x=as.factor(cyl),y=cty,fill=as.factor(cyl)))+geom_boxplot()+xlab("cyl")
df
df=ggplot(data=mpg,aes(x=as.factor(cyl),y=hwy,fill=as.factor(cyl)))+geom_boxplot()+xlab("cyl")
df
df=ggplot(data=mpg,aes(x=as.factor(cyl),y=cty,fill=as.factor(cyl)))+geom_boxplot()+xlab("cyl")
df
qplot(data=iris,x=Sepal.Wi)
qplot(data=iris,x=Sepal.Length,y=Petal.Length)
ggplot(data=iris,aes(x=Sepal.Length,y=Petal.Length))+geom_point()
qplot(data=iris,x=Sepal.Length,y=Petal.Length)
ggplot(data=iris,aes(x=Sepal.Length,y=Petal.Length))+geom_point()
df=boxplot(hwy~cyl,data=mpg,col=rainbow(4),xlab="cyl")
library(ggplot2)
library(dplyr)
df=boxplot(hwy~cyl,data=mpg,col=rainbow(4),xlab="cyl")
df$stats
df
df=ggplot(data=mpg,aes(x=as.factor(cyl),y=hwy,fill=as.factor(cyl)))+geom_boxplot()+xlab("cyl")+labs(fill="cyl")
df
df2=ggplot(data=mpg,aes(x=cty,y=hwy))+geom_point(alpha=0.2)
df2
mpg_temp=mpg %>% filter(class=="compact") %>% group_by(manufacturer) %>% summarise(mean_hwy=mean(hwy))
df3=ggplot(data=mpg_temp,aes(x=reorder(manufacturer,-mean_hwy),y=mean_hwy,fill=manufacturer))+geom_col()
df3
df3=ggplot(data=mpg_temp,aes(x=reorder(manufacturer,-mean_hwy),y=mean_hwy,fill=manufacturer))+geom_col()+xlab(manufacturer)
df3=ggplot(data=mpg_temp,aes(x=reorder(manufacturer,-mean_hwy),y=mean_hwy,fill=manufacturer))+geom_col()+xlab("manufacturer")
df3
df=ggplot(data=mpg,aes(x=as.factor(cyl),y=cty,fill=as.factor(cyl)))+geom_boxplot()+xlab("cyl")
df
df=ggplot(data=mpg,aes(x=as.factor(cyl),y=hwy,fill=as.factor(cyl)))+geom_boxplot()+xlab("cyl")+labs(fill="cyl")
df
#1
ggplot(data=mpg,aes(x=as.factor(cyl),y=hwy,fill=as.factor(cyl)))+geom_boxplot()+xlab("cyl")+labs(fill="cyl")
#2
df2=ggplot(data=mpg,aes(x=cty,y=hwy))+geom_point(alpha=0.2)
#2
ggplot(data=mpg,aes(x=cty,y=hwy))+geom_point(alpha=0.2)
#3
mpg_temp=mpg %>% filter(class=="compact") %>% group_by(manufacturer) %>% summarise(mean_hwy=mean(hwy))
df3=ggplot(data=mpg_temp,aes(x=reorder(manufacturer,-mean_hwy),y=mean_hwy,fill=manufacturer))+geom_col()+xlab("manufacturer")
#4
df=ggplot(data=mpg,aes(x=as.factor(cyl),y=cty,fill=as.factor(cyl)))+geom_boxplot()+xlab("cyl")
#4
ggplot(data=mpg,aes(x=as.factor(cyl),y=cty,fill=as.factor(cyl)))+geom_boxplot()+xlab("cyl")
#4
boxplot(cty~cyl)
#4
boxplot(cty~cyl,data=mpg)
#4
boxplot(cty~cyl,data=mpg)
boxplot(cty~cyl,data=mpg)$stats
a= mpg %>% filter(cyl==4) %>% arrange(desc(cyl)) %>% head(2)
a
a= mpg %>% filter(cyl==4) %>% arrange() %>% head(2)
a
a= mpg %>% filter(cyl==4) %>% arrange(cyl) %>% head(2)
a
a= mpg %>% filter(cyl==4) %>% arrange(cty) %>% head(2)
a
a= mpg %>% filter(cyl==4) %>% arrange(desc(cty)) %>% head(2)
a
a= mpg %>% filter(cyl==4) %>% arrange(desc(cty)) %>% head(10)
a
a= mpg %>% filter(cyl==4) %>% arrange(desc(cty)) %>% head(2)
a
boxplot(cty~cyl,data=mpg)$stats
#4개의 실린더를 가진 차량의 극단치 4개를 출력해보자
a= mpg %>% filter(cyl==4) %>% arrange(desc(cty)) %>% head()
a
#4개의 실린더를 가진 차량의 극단치 4개를 출력해보자
a= mpg %>% filter(cyl==4) %>% arrange(desc(cty)) %>% head()
#4개의 실린더를 가진 차량의 극단치 4개를 출력해보자
a= mpg %>% filter(cyl==4) %>% arrange(desc(cty)) %>% head(4)
a
#4개의 실린더를 가진 차량의 극단치 4개를 출력해보자
a= mpg %>% filter(cyl==4) %>% arrange(desc(cty)) %>% head(5)
a
#4개의 실린더를 가진 차량의 극단치 4개를 출력해보자
a= mpg %>% filter(cyl==4) %>% arrange(desc(cty)) %>% head()
a
#4개의 실린더를 가진 차량의 극단치 를 출력해보자
mpg %>% filter(cyl==4) %>% arrange(desc(cty)) %>% head()
boxplot(cty~cyl,data=mpg)$stats
mpg %>% filter(cyl==4) %>% arrange(desc(cty)) %>% head()
library(ggmap)
library(ggplot2)
library(openxlsx)
df=read.xlsx(file.choose(),sheet=1,startRow=2)
gc=geocode(enc2utf8(c("서울","부산산")))
register_google(key = "AIzaSyDoF_ZIWB5VhuifKAv99Xek5bDfugkLlOc")
gc=geocode(enc2utf8(c("서울","부산")))
gc
gc=geocode(enc2utf8(c("서울","부산","대구","인천","광주","대전","울산","경기","강원","충북","충남","전북","전남","경북","경남","제주")))
gc=geocode(enc2utf8(c("서울","부산","대구","인천","광주","대전","울산","경기","강원","충북","충남","전북","전남","경북","경남","제주시시")))
gc=geocode(enc2utf8(c("서울","부산","대구","인천","광주","대전","울산","경기","강원","충북","충남","전북","전남","경북","경남","제주시")))
gc
View(gc)
df[1,0]
df[1,]
df[2,]
df
View(df)
df[1,]
class(df[1,])
df2=data.frame(city=df[1,])
df2=data.frame(city=df[1,],PM=df[2,0],lon=gc$lon,lat=gc$lat)
df2=data.frame(city=df[1,],PM=df[2,],lon=gc$lon,lat=gc$lat)
df2=data.frame(city=df[1,],PM=df[2,],lon=gc$lon,lat=gc$lat)
df2
gc=geocode(enc2utf8(c("서울","부산","대구","인천","광주","대전","울산","경기","강원","충북","충남","전북","전남","경북","경남","제주시","세종종")))
gc=geocode(enc2utf8(c("서울","부산","대구","인천","광주","대전","울산","경기","강원","충북","충남","전북","전남","경북","경남","제주시","세종")))
df2=data.frame(city=df[2:16,],PM=df[2:16,],lon=gc$lon,lat=gc$lat)
df2=data.frame(city=df[2,2:16],PM=df[2,2:16],lon=gc$lon,lat=gc$lat)
df2
df2=data.frame(city=df[2,2:17],PM=df[2,2:17],lon=gc$lon,lat=gc$lat)
df2
df2=data.frame(city=df[2,2:17],PM=df[3,2:17],lon=gc$lon,lat=gc$lat)
df2
df2=data.frame(city=df[2,],PM=df[3,2:17],lon=gc$lon,lat=gc$lat)
df2
df2=data.frame(city=df[2,],PM=df[3,],lon=gc$lon,lat=gc$lat)
df2
df
df=read.xlsx(file.choose(),sheet=1,startRow=2,header=T)
df[,1,]
df[1,]
df2=data.frame(city=df[1,-1],PM=df[2,-1],lon=gc$lon,lat=gc$lat)
df2
df2=data.frame(city=df[1,],PM=df[2,-1],lon=gc$lon,lat=gc$lat)
df2=data.frame(city=df[1,],PM=df[2,],lon=gc$lon,lat=gc$lat)
df2
df
View(df)
df[1,]
df[2,]
df2=data.frame(city=df[1,],PM=df[2,],lon=gc$lon,lat=gc$lat)
df2
city=as.vector(df[1,])
city
city=as.vector(df[1,-1])
city
df2=data.frame(city=city,lon=gc$lon,lat=gc$lat)
df2
city=as.vector(df[1,-1])
clasS(city)
class(city)
city=as.vector(df[1,-1])
city=df[1,-1]
vity
city
df2=t(df)
df2
View(df2)
df2=data.frame(city=df2[,1],lon=gc$lon,lat=gc$lat)
df2=data.frame(city=df2[3:18,1],lon=gc$lon,lat=gc$lat)
df2
df2[,2]
df2[,1]
df2=t(df)
df2[,1]
df2[-1,1]
df2[[2:18],1]
df2[2:18,1]
df2[2:17,1]
df2=data.frame(city=df2[2:17,1],lon=gc$lon,lat=gc$lat)
gc
gc=geocode(enc2utf8(c("서울","부산","대구","인천","광주","대전","울산","경기","강원","충북","충남","전북","전남","경북","경남","제주시")))
gc
df2=data.frame(city=df2[2:17,1],lon=gc$lon,lat=gc$lat)
df2
df
df2=data.frame(city=df2[1,],lon=gc$lon,lat=gc$lat)
df2
df2=t(df)
df2
View(df2)
df2=data.frame(city=df2[2:17,1],PM=df2[2:17,2],lon=gc$lon,lat=gc$lat)
df2
df2=data.frame(city=df2[2:17,1],PM=df2[2:17,2],lon=gc$lon,lat=gc$lat)
df2
df2=data.frame(city=df2[1:17,1],PM=df2[2:17,2],lon=gc$lon,lat=gc$lat)
df2=data.frame(city=df2[2:17,1],PM=df2[2:17,2],lon=gc$lon,lat=gc$lat)
df2
df2=data.frame(city=df2[2:17,1],PM=df2[2:17,2],lon=gc$lon,lat=gc$lat)
df2
df2=data.frame(city=df2[2:17,1],PM=df2[2:17,2],lon=gc$lon,lat=gc$lat)
df2
rm=(list=ls())
df=read.xlsx(file.choose(),sheet=1,startRow=2)
gc=geocode(enc2utf8(c("서울","부산","대구","인천","광주","대전","울산","경기","강원","충북","충남","전북","전남","경북","경남","제주시")))
df2=t(df)
df2=data.frame(city=df2[2:17,1],PM=df2[2:17,2],lon=gc$lon,lat=gc$lat)
df2
df2
df2=data.frame(city=df2[2:17,1],PM=df2[2:17,2],lon=gc$lon,lat=gc$lat)
df2
rm=(list=ls())
gc=geocode(enc2utf8(c("서울","부산","대구","인천","광주","대전","울산","경기","강원","충북","충남","전북","전남","경북","경남","제주시")))
df3=data.frame(city=df2[2:17,1],PM=df2[2:17,2],lon=gc$lon,lat=gc$lat)
df3
rm=(list=ls())
df=read.xlsx(file.choose(),sheet=1,startRow=2)
gc=geocode(enc2utf8(c("서울","부산","대구","인천","광주","대전","울산","경기","강원","충북","충남","전북","전남","경북","경남","제주시")))
df2=t(df)
df3=data.frame(city=df2[2:17,1],PM=df2[2:17,2],lon=gc$lon,lat=gc$lat)
df3
data.frame
df3=data.frame(city=df2[2:17,1],PM=df2[2:17,2],lon=gc$lon,lat=gc$lat)
df3
ggplot(data=df3,aes(x=reorder(-city,PM),y=PM),fill=city)+geom_col()
ggplot(data=df3,aes(x=reorder(city,PM),y=PM),fill=city)+geom_col()
ggplot(data=df3,aes(x=reorder(city,-PM),y=PM),fill=city)+geom_col()
ggplot(data=df3,aes(x=city,y=PM),fill=city)+geom_col()
ggplot(data=df3,aes(x=city,y=PM,fill=city))+geom_col()
ggplot(data=df3,aes(x=reoder(-city,PM),y=PM,fill=city))+geom_col()
ggplot(data=df3,aes(x=reorder(-city,PM),y=PM,fill=city))+geom_col()
ggplot(data=df3,aes(x=reorder(city,-PM),y=PM,fill=city))+geom_col()
ggplot(data=df3,aes(x=reorder(city,PM),y=PM,fill=city))+geom_col()
ggplot(data=df3,aes(x=reorder(city,PM),y=PM,fill=city))+geom_col()
ggplot(data=df3,aes(x=reorder(city,PM),y=PM, fill=city))+geom_col()
warnings()
str(df2)
PM=as.numeric(df2[2:17,2])
df3=data.frame(city=df2[2:17,1],PM=PM,lon=gc$lon,lat=gc$lat)
ggplot(data=df3,aes(x=reorder(city,PM),y=PM, fill=city))+geom_col()
ggplot(data=df3,aes(x=reorder(city,-PM),y=PM, fill=city))+geom_col()
ggplot(data=df3,aes(x=reorder(city,-PM),y=PM, fill=city))+geom_col()+xlab("city")
cen=c((max(gc$lon)+min(gc$lon))/2,
(max(gc$lat)+min(gclat))/2)
cen=c((max(gc$lon)+min(gc$lon))/2,
(max(gc$lat)+min(gc$lat))/2)
cen
map=get_googlemap(center = cen,zoom=6)
gmap=ggmap(map)
gmap+geom_point(data=df3,aes(x=lon,y=lat),color="red",size=df3$PM,alpha=0.2)
